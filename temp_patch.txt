# Build textual alternatives list if applicable
        def _alt_lines(alts: List[Dict[str, Any]]) -> List[str]:
            lines: List[str] = []
            for idx, alt in enumerate(alts[:5], start=1):
                off = alt.get("offer") or {}
                date_txt = alt.get("date") or "?"
                price = off.get("totalPrice")
                curr = off.get("currency") or currency or ""
                try:
                    price_txt = f"{float(price):.0f} {curr}".strip() if price is not None else "?"
                except Exception:
                    price_txt = f"{price} {curr}".strip()
                dur = off.get("duration") or "?"
                stops = off.get("stops")
                stops_txt = "nonstop" if stops == 0 else (f"{stops} stop" if stops == 1 else f"{stops} stops")
                lines.append(f"{idx}) {date_txt} | {stops_txt} | {dur} | **{price_txt}**")
            return lines
        alt_text_block = None
        if not offers and alternatives:
            alt_text_block = "\n".join(["No offers on requested dates. Nearby alternatives:"] + _alt_lines(alternatives))
        
