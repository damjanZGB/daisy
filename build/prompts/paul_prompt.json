{
    "promptOverrides":  [
                            {
                                "promptType":  "ORCHESTRATION",
                                "promptState":  "ENABLED",
                                "orchestrationPromptTemplate":  {
                                                                    "value":  "## Lufthansa Group Agent Aris - Rational Travel Orchestrator\r\n\r\n### Role\r\nAris is a Lufthansa Group Digital Travel Agent whose purpose is to transform fragmented traveler ideas into clear, optimized flight journeys within the Lufthansa Group network. Aris interacts calmly, listens precisely, and converts open-ended statements into structured plans without revealing their reasoning pattern too early.\r\n\r\n### Opening Sentence\r\n\u003e \"Hello and welcome aboard the Lufthansa Group experience. I am Aris, your digital travel orchestrator. Tell me?what kind of journey are you envisioning today?\"\r\n\r\n### Objectives\r\n1. **Goal:** Deliver the most reliable, rule-compliant Lufthansa Group itinerary for each traveler.  \r\n2. **Success indicator:** The traveler explicitly validates that the itinerary is practical and complete.  \r\n3. **Method:** Analyse stated constraints, suggest optimized flight combinations, then verify alignment with traveler priorities.\r\n\r\n### Adaptive Logic Module\r\n1. Begin neutral; collect traveler intent, timing, and constraints.  \r\n2. After several exchanges, classify the traveler pattern (analytical, spontaneous, sentimental, or experiential).  \r\n3. Transition quietly into a fitting Lufthansa tone once classification confidence exceeds 50%.  \r\n4. Retain persona state throughout the session.\r\n\r\n### Conversational Approach\r\n- Guide by evidence and structure.  \r\n- Offer summaries and numbered options.  \r\n- Reconfirm key data points (dates, origin, destination, passengers).  \r\n- Keep tone measured, factual, and courteous.\r\n\r\n### Tool and Knowledge Base Use\r\n- `/tools/iata/lookup` - resolve airports and cities.\r\n- `/tools/amadeus/search` - fetch Lufthansa Group flight options via the proxy.\r\n- TimePhraseParser action group (Lambda) - always convert natural-language date phrases to ISO before searching flights (`human_to_future_iso` for relative phrases, `normalize_any` for explicit dates).\r\n- Knowledge base - Lufthansa background and contextual storytelling.\r\n- All interactions run through the secure proxy; never expose credentials.\r\n\r\n**Operational Guidance**\r\n- When system context provides an inferred departure airport (for example, \"Default departure airport inferred via UI geolocation is ZAG (Zapresic, Croatia)\"), acknowledge it once, confirm with the traveler, and reuse it by default. Do not ask for IATA codes?resolve airports with `/tools/iata/lookup` if anything changes.\r\n- Never ask travelers to supply IATA codes; resolve them via `/tools/iata/lookup`.\r\n- Always invoke the appropriate TimePhraseParser operation before `/tools/amadeus/search` so every traveler-supplied date becomes ISO `YYYY-MM-DD`. When unsure, prefer the tool over guessing.\r\n- If the time tool returns a date earlier than today, add the missing context (month/year) and call it again or ask the traveler to clarify before proceeding.\r\n- Cache confirmed codes in-session for later turns.\r\n\r\n\r\n### Flight Presentation\r\n- Share at most five flight options in a single response, prioritising the best matches for the stated requirements.\r\n- Always keep recommendations strictly within the Lufthansa Group; if no matching flights exist, say so clearly and invite the traveler to adjust dates or consider nearby LH hubs. \r\n- When presenting itineraries, follow this exact structure:\r\n  - Number each option with the flight number in bold (for example, `1. **Flight 612**:`).\r\n  - Use hyphen bullet points for every detail line: departure, arrival, connection, and duration.\r\n  - For connections, start the line with `- THEN, **Flight XYZ** - ...` (THEN must be uppercase). Include `NEXT DAY` in uppercase immediately after the time whenever a segment departs on the following calendar day.\r\n  - End each option with a bold price line, e.g. `**Price: ?157.60. 1 stop.**` (update currency, price, and stop count as needed).\r\n\r\n### Brand Compliance\r\n- Recommend only Lufthansa Group airlines: **LH, LX, OS, SN, EW, 4Y, EN.**  \r\n- If unavailable, offer nearby Lufthansa Group destinations or dates within 12 months.  \r\n- Avoid comparisons with external OTAs or competitor brands.\r\n\r\n### Error Handling\r\n\u003e \"I am momentarily unable to retrieve flight details. Let us refine the dates or select a nearby airport.\"\r\n\r\n### Personality Tone\r\nEfficient, reasoned, objective, and trust-building. Aris speaks like a calm systems architect?precise but human.\r\n\r\n### Closing Line\r\n\u003e \"Thank you for planning with Lufthansa Group. May your itinerary unfold smoothly from departure to arrival.\"\r\n\r\n",
                                                                    "PSPath":  "C:\\Users\\Damjan\\source\\repos\\daisy\\aws\\agent_aris_instructions_ascii.md",
                                                                    "PSParentPath":  "C:\\Users\\Damjan\\source\\repos\\daisy\\aws",
                                                                    "PSChildName":  "agent_aris_instructions_ascii.md",
                                                                    "PSDrive":  {
                                                                                    "CurrentLocation":  "Users\\Damjan\\source\\repos\\daisy",
                                                                                    "Name":  "C",
                                                                                    "Provider":  {
                                                                                                     "ImplementingType":  "Microsoft.PowerShell.Commands.FileSystemProvider",
                                                                                                     "HelpFile":  "System.Management.Automation.dll-Help.xml",
                                                                                                     "Name":  "FileSystem",
                                                                                                     "PSSnapIn":  "Microsoft.PowerShell.Core",
                                                                                                     "ModuleName":  "Microsoft.PowerShell.Core",
                                                                                                     "Module":  null,
                                                                                                     "Description":  "",
                                                                                                     "Capabilities":  52,
                                                                                                     "Home":  "C:\\Users\\Damjan",
                                                                                                     "Drives":  "C"
                                                                                                 },
                                                                                    "Root":  "C:\\",
                                                                                    "Description":  "",
                                                                                    "MaximumSize":  null,
                                                                                    "Credential":  {
                                                                                                       "UserName":  null,
                                                                                                       "Password":  null
                                                                                                   },
                                                                                    "DisplayRoot":  null
                                                                                },
                                                                    "PSProvider":  {
                                                                                       "ImplementingType":  {
                                                                                                                "Module":  "System.Management.Automation.dll",
                                                                                                                "Assembly":  "System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
                                                                                                                "TypeHandle":  "System.RuntimeTypeHandle",
                                                                                                                "DeclaringMethod":  null,
                                                                                                                "BaseType":  "System.Management.Automation.Provider.NavigationCmdletProvider",
                                                                                                                "UnderlyingSystemType":  "Microsoft.PowerShell.Commands.FileSystemProvider",
                                                                                                                "FullName":  "Microsoft.PowerShell.Commands.FileSystemProvider",
                                                                                                                "AssemblyQualifiedName":  "Microsoft.PowerShell.Commands.FileSystemProvider, System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
                                                                                                                "Namespace":  "Microsoft.PowerShell.Commands",
                                                                                                                "GUID":  "b4755d19-b6a7-38dc-ae06-4167f801062f",
                                                                                                                "IsEnum":  false,
                                                                                                                "GenericParameterAttributes":  null,
                                                                                                                "IsSecurityCritical":  true,
                                                                                                                "IsSecuritySafeCritical":  false,
                                                                                                                "IsSecurityTransparent":  false,
                                                                                                                "IsGenericTypeDefinition":  false,
                                                                                                                "IsGenericParameter":  false,
                                                                                                                "GenericParameterPosition":  null,
                                                                                                                "IsGenericType":  false,
                                                                                                                "IsConstructedGenericType":  false,
                                                                                                                "ContainsGenericParameters":  false,
                                                                                                                "StructLayoutAttribute":  "System.Runtime.InteropServices.StructLayoutAttribute",
                                                                                                                "Name":  "FileSystemProvider",
                                                                                                                "MemberType":  32,
                                                                                                                "DeclaringType":  null,
                                                                                                                "ReflectedType":  null,
                                                                                                                "MetadataToken":  33556356,
                                                                                                                "GenericTypeParameters":  "",
                                                                                                                "DeclaredConstructors":  "Void .ctor() Void .cctor()",
                                                                                                                "DeclaredEvents":  "",
                                                                                                                "DeclaredFields":  "System.Collections.ObjectModel.Collection`1[System.Management.Automation.WildcardPattern] excludeMatcher System.Management.Automation.PSTraceSource tracer Int32 FILETRANSFERSIZE System.String ProviderName",
                                                                                                                "DeclaredMembers":  "System.String NormalizePath(System.String) System.IO.FileSystemInfo GetFileSystemInfo(System.String, Boolean ByRef) Boolean IsFilterSet() System.Object GetChildNamesDynamicParameters(System.String) System.Object GetChildItemsDynamicParameters(System.String, Boolean) System.Object CopyItemDynamicParameters(System.String, System.String, Boolean) System.String GetHelpMaml(System.String, System.String) System.Management.Automation.ProviderInfo Start(System.Management.Automation.ProviderInfo) System.Management.Automation.PSDriveInfo NewDrive(System.Management.Automation.PSDriveInfo) Void MapNetworkDrive(System.Management.Automation.PSDriveInfo) Boolean IsNetworkMappedDrive(System.Management.Automation.PSDriveInfo) System.Management.Automation.PSDriveInfo RemoveDrive(System.Management.Automation.PSDriveInfo) Boolean IsSupportedDriveForPersistence(System.Management.Automation.PSDriveInfo) System.String GetUNCForNetworkDrive(System.String) System.String GetSubstitutedPathForNetworkDosDevice(System.String) System.String GetRootPathForNetworkDriveOrDosDevice(System.IO.DriveInfo) System.Collections.ObjectModel.Collection`1[System.Management.Automation.PSDriveInfo] InitializeDefaultDrives() System.Object GetItemDynamicParameters(System.String) Boolean IsValidPath(System.String) Void GetItem(System.String) System.IO.FileSystemInfo GetFileSystemItem(System.String, Boolean ByRef, Boolean) Void InvokeDefaultAction(System.String) Void GetChildItems(System.String, Boolean, UInt32) Void GetChildNames(System.String, System.Management.Automation.ReturnContainers) Boolean ConvertPath(System.String, System.String, System.String ByRef, System.String ByRef) Void GetPathItems(System.String, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers) Void Dir(System.IO.DirectoryInfo, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers, InodeTracker) System.Management.Automation.FlagsExpression`1[System.IO.FileAttributes] FormatAttributeSwitchParamters() System.String Mode(System.Management.Automation.PSObject) Void RenameItem(System.String, System.String) Void NewItem(System.String, System.String, System.Object) Boolean CheckItemExists(System.String, Boolean ByRef) ItemType GetItemType(System.String) Void CreateDirectory(System.String, Boolean) Boolean CreateIntermediateDirectories(System.String) Void RemoveItem(System.String, Boolean) System.Object RemoveItemDynamicParameters(System.String, Boolean) Void RemoveDirectoryInfoItem(System.IO.DirectoryInfo, Boolean, Boolean, Boolean) Void RemoveFileInfoItem(System.IO.FileInfo, Boolean) Void RemoveFileSystemItem(System.IO.FileSystemInfo, Boolean) Boolean ItemExists(System.String) Boolean ItemExists(System.String, System.Management.Automation.ErrorRecord ByRef) System.Object ItemExistsDynamicParameters(System.String) Boolean HasChildItems(System.String) Boolean DirectoryInfoHasChildItems(System.IO.DirectoryInfo) Void CopyItem(System.String, System.String, Boolean) Void CopyItemFromRemoteSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.Runspaces.PSSession) Void CopyItemLocalOrToSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell) Void CopyDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean, Boolean, System.Management.Automation.PowerShell) Void CopyFileInfoItem(System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell) Void CopyDirectoryFromRemoteSession(System.String, System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell) System.Collections.ArrayList GetRemoteSourceAlternateStreams(System.Management.Automation.PowerShell, System.String) Void InitilizeFunctionPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell) Void RemoveFunctionsPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell) Boolean ValidRemoteSessionForScripting(System.Management.Automation.Runspaces.Runspace) System.Collections.Hashtable GetRemoteFileMetadata(System.String, System.Management.Automation.PowerShell) Void SetFileMetadata(System.String, System.IO.FileInfo, System.Management.Automation.PowerShell) Void CopyFileFromRemoteSession(System.String, System.String, System.String, Boolean, System.Management.Automation.PowerShell, Int64) Boolean PerformCopyFileFromRemoteSession(System.String, System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell, Int64, Boolean, System.String) Void InitilizeFunctionsPSCopyFileToRemoteSession(System.Management.Automation.PowerShell) Void RemoveFunctionPSCopyFileToRemoteSession(System.Management.Automation.PowerShell) Boolean RemoteTargetSupportsAlternateStreams(System.Management.Automation.PowerShell, System.String) System.String MakeRemotePath(System.Management.Automation.PowerShell, System.String, System.String) Boolean RemoteDirectoryExist(System.Management.Automation.PowerShell, System.String) Boolean CopyFileStreamToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell, Boolean, System.String) System.Collections.Hashtable GetFileMetadata(System.IO.FileInfo) Void SetRemoteFileMetadata(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell) Boolean PerformCopyFileToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell) Boolean RemoteDestinationPathIsFile(System.String, System.Management.Automation.PowerShell) System.String CreateDirectoryOnRemoteSession(System.String, Boolean, System.Management.Automation.PowerShell) Boolean PathIsReservedDeviceName(System.String, System.String) System.String GetParentPath(System.String, System.String) Boolean IsAbsolutePath(System.String) Boolean IsUNCPath(System.String) Boolean IsUNCRoot(System.String) Boolean IsPathRoot(System.String) System.String NormalizeRelativePath(System.String, System.String) System.String NormalizeRelativePathHelper(System.String, System.String) System.String RemoveRelativeTokens(System.String) System.String GetCommonBase(System.String, System.String) System.Collections.Generic.Stack`1[System.String] TokenizePathToStack(System.String, System.String) System.Collections.Generic.Stack`1[System.String] NormalizeThePath(System.String, System.Collections.Generic.Stack`1[System.String]) System.String CreateNormalizedRelativePathFromStack(System.Collections.Generic.Stack`1[System.String]) System.String GetChildName(System.String) System.String EnsureDriveIsRooted(System.String) Boolean IsItemContainer(System.String) Void MoveItem(System.String, System.String) Void MoveFileInfoItem(System.IO.FileInfo, System.String, Boolean, Boolean) Void MoveDirectoryInfoUnchecked(System.IO.DirectoryInfo, System.String, Boolean) Void MoveDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean) Void CopyAndDelete(System.IO.DirectoryInfo, System.String, Boolean) Boolean IsSameVolume(System.String, System.String) Void GetProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String]) System.Object GetPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String]) Void SetProperty(System.String, System.Management.Automation.PSObject) System.Object SetPropertyDynamicParameters(System.String, System.Management.Automation.PSObject) Void ClearProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String]) System.Object ClearPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String]) System.Management.Automation.Provider.IContentReader GetContentReader(System.String) System.Object GetContentReaderDynamicParameters(System.String) System.Management.Automation.Provider.IContentWriter GetContentWriter(System.String) System.Object GetContentWriterDynamicParameters(System.String) Void ClearContent(System.String) System.Object ClearContentDynamicParameters(System.String) Int32 SafeGetFileAttributes(System.String) Void ValidateParameters(Boolean) Void GetSecurityDescriptor(System.String, System.Security.AccessControl.AccessControlSections) Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity) Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity, System.Security.AccessControl.AccessControlSections) System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorFromPath(System.String, System.Security.AccessControl.AccessControlSections) System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorOfType(System.String, System.Security.AccessControl.AccessControlSections) System.Security.AccessControl.ObjectSecurity NewSecurityDescriptor(ItemType) System.Management.Automation.ErrorRecord CreateErrorRecord(System.String, System.String) Void \u003cRemoveDirectoryInfoItem\u003eg__WriteErrorHelper|43_0(System.Exception, \u003c\u003ec__DisplayClass43_0 ByRef) Void .ctor() Void .cctor() System.Collections.ObjectModel.Collection`1[System.Management.Automation.WildcardPattern] excludeMatcher System.Management.Automation.PSTraceSource tracer Int32 FILETRANSFERSIZE System.String ProviderName Microsoft.PowerShell.Commands.FileSystemProvider+ItemType Microsoft.PowerShell.Commands.FileSystemProvider+NativeMethods Microsoft.PowerShell.Commands.FileSystemProvider+NetResource Microsoft.PowerShell.Commands.FileSystemProvider+InodeTracker Microsoft.PowerShell.Commands.FileSystemProvider+\u003c\u003ec__DisplayClass43_0",
                                                                                                                "DeclaredMethods":  "System.String Mode(System.Management.Automation.PSObject) System.String NormalizePath(System.String) System.IO.FileSystemInfo GetFileSystemInfo(System.String, Boolean ByRef) Boolean IsFilterSet() System.Object GetChildNamesDynamicParameters(System.String) System.Object GetChildItemsDynamicParameters(System.String, Boolean) System.Object CopyItemDynamicParameters(System.String, System.String, Boolean) System.String GetHelpMaml(System.String, System.String) System.Management.Automation.ProviderInfo Start(System.Management.Automation.ProviderInfo) System.Management.Automation.PSDriveInfo NewDrive(System.Management.Automation.PSDriveInfo) Void MapNetworkDrive(System.Management.Automation.PSDriveInfo) Boolean IsNetworkMappedDrive(System.Management.Automation.PSDriveInfo) System.Management.Automation.PSDriveInfo RemoveDrive(System.Management.Automation.PSDriveInfo) Boolean IsSupportedDriveForPersistence(System.Management.Automation.PSDriveInfo) System.String GetUNCForNetworkDrive(System.String) System.String GetSubstitutedPathForNetworkDosDevice(System.String) System.String GetRootPathForNetworkDriveOrDosDevice(System.IO.DriveInfo) System.Collections.ObjectModel.Collection`1[System.Management.Automation.PSDriveInfo] InitializeDefaultDrives() System.Object GetItemDynamicParameters(System.String) Boolean IsValidPath(System.String) Void GetItem(System.String) System.IO.FileSystemInfo GetFileSystemItem(System.String, Boolean ByRef, Boolean) Void InvokeDefaultAction(System.String) Void GetChildItems(System.String, Boolean, UInt32) Void GetChildNames(System.String, System.Management.Automation.ReturnContainers) Boolean ConvertPath(System.String, System.String, System.String ByRef, System.String ByRef) Void GetPathItems(System.String, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers) Void Dir(System.IO.DirectoryInfo, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers, InodeTracker) System.Management.Automation.FlagsExpression`1[System.IO.FileAttributes] FormatAttributeSwitchParamters() Void RenameItem(System.String, System.String) Void NewItem(System.String, System.String, System.Object) Boolean CheckItemExists(System.String, Boolean ByRef) ItemType GetItemType(System.String) Void CreateDirectory(System.String, Boolean) Boolean CreateIntermediateDirectories(System.String) Void RemoveItem(System.String, Boolean) System.Object RemoveItemDynamicParameters(System.String, Boolean) Void RemoveDirectoryInfoItem(System.IO.DirectoryInfo, Boolean, Boolean, Boolean) Void RemoveFileInfoItem(System.IO.FileInfo, Boolean) Void RemoveFileSystemItem(System.IO.FileSystemInfo, Boolean) Boolean ItemExists(System.String) Boolean ItemExists(System.String, System.Management.Automation.ErrorRecord ByRef) System.Object ItemExistsDynamicParameters(System.String) Boolean HasChildItems(System.String) Boolean DirectoryInfoHasChildItems(System.IO.DirectoryInfo) Void CopyItem(System.String, System.String, Boolean) Void CopyItemFromRemoteSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.Runspaces.PSSession) Void CopyItemLocalOrToSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell) Void CopyDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean, Boolean, System.Management.Automation.PowerShell) Void CopyFileInfoItem(System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell) Void CopyDirectoryFromRemoteSession(System.String, System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell) System.Collections.ArrayList GetRemoteSourceAlternateStreams(System.Management.Automation.PowerShell, System.String) Void InitilizeFunctionPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell) Void RemoveFunctionsPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell) Boolean ValidRemoteSessionForScripting(System.Management.Automation.Runspaces.Runspace) System.Collections.Hashtable GetRemoteFileMetadata(System.String, System.Management.Automation.PowerShell) Void SetFileMetadata(System.String, System.IO.FileInfo, System.Management.Automation.PowerShell) Void CopyFileFromRemoteSession(System.String, System.String, System.String, Boolean, System.Management.Automation.PowerShell, Int64) Boolean PerformCopyFileFromRemoteSession(System.String, System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell, Int64, Boolean, System.String) Void InitilizeFunctionsPSCopyFileToRemoteSession(System.Management.Automation.PowerShell) Void RemoveFunctionPSCopyFileToRemoteSession(System.Management.Automation.PowerShell) Boolean RemoteTargetSupportsAlternateStreams(System.Management.Automation.PowerShell, System.String) System.String MakeRemotePath(System.Management.Automation.PowerShell, System.String, System.String) Boolean RemoteDirectoryExist(System.Management.Automation.PowerShell, System.String) Boolean CopyFileStreamToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell, Boolean, System.String) System.Collections.Hashtable GetFileMetadata(System.IO.FileInfo) Void SetRemoteFileMetadata(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell) Boolean PerformCopyFileToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell) Boolean RemoteDestinationPathIsFile(System.String, System.Management.Automation.PowerShell) System.String CreateDirectoryOnRemoteSession(System.String, Boolean, System.Management.Automation.PowerShell) Boolean PathIsReservedDeviceName(System.String, System.String) System.String GetParentPath(System.String, System.String) Boolean IsAbsolutePath(System.String) Boolean IsUNCPath(System.String) Boolean IsUNCRoot(System.String) Boolean IsPathRoot(System.String) System.String NormalizeRelativePath(System.String, System.String) System.String NormalizeRelativePathHelper(System.String, System.String) System.String RemoveRelativeTokens(System.String) System.String GetCommonBase(System.String, System.String) System.Collections.Generic.Stack`1[System.String] TokenizePathToStack(System.String, System.String) System.Collections.Generic.Stack`1[System.String] NormalizeThePath(System.String, System.Collections.Generic.Stack`1[System.String]) System.String CreateNormalizedRelativePathFromStack(System.Collections.Generic.Stack`1[System.String]) System.String GetChildName(System.String) System.String EnsureDriveIsRooted(System.String) Boolean IsItemContainer(System.String) Void MoveItem(System.String, System.String) Void MoveFileInfoItem(System.IO.FileInfo, System.String, Boolean, Boolean) Void MoveDirectoryInfoUnchecked(System.IO.DirectoryInfo, System.String, Boolean) Void MoveDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean) Void CopyAndDelete(System.IO.DirectoryInfo, System.String, Boolean) Boolean IsSameVolume(System.String, System.String) Void GetProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String]) System.Object GetPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String]) Void SetProperty(System.String, System.Management.Automation.PSObject) System.Object SetPropertyDynamicParameters(System.String, System.Management.Automation.PSObject) Void ClearProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String]) System.Object ClearPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String]) System.Management.Automation.Provider.IContentReader GetContentReader(System.String) System.Object GetContentReaderDynamicParameters(System.String) System.Management.Automation.Provider.IContentWriter GetContentWriter(System.String) System.Object GetContentWriterDynamicParameters(System.String) Void ClearContent(System.String) System.Object ClearContentDynamicParameters(System.String) Int32 SafeGetFileAttributes(System.String) Void ValidateParameters(Boolean) Void GetSecurityDescriptor(System.String, System.Security.AccessControl.AccessControlSections) Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity) Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity, System.Security.AccessControl.AccessControlSections) System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorFromPath(System.String, System.Security.AccessControl.AccessControlSections) System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorOfType(System.String, System.Security.AccessControl.AccessControlSections) System.Security.AccessControl.ObjectSecurity NewSecurityDescriptor(ItemType) System.Management.Automation.ErrorRecord CreateErrorRecord(System.String, System.String) Void \u003cRemoveDirectoryInfoItem\u003eg__WriteErrorHelper|43_0(System.Exception, \u003c\u003ec__DisplayClass43_0 ByRef)",
                                                                                                                "DeclaredNestedTypes":  "Microsoft.PowerShell.Commands.FileSystemProvider+ItemType Microsoft.PowerShell.Commands.FileSystemProvider+NativeMethods Microsoft.PowerShell.Commands.FileSystemProvider+NetResource Microsoft.PowerShell.Commands.FileSystemProvider+InodeTracker Microsoft.PowerShell.Commands.FileSystemProvider+\u003c\u003ec__DisplayClass43_0",
                                                                                                                "DeclaredProperties":  "",
                                                                                                                "ImplementedInterfaces":  "System.Management.Automation.IResourceSupplier System.Management.Automation.Provider.IContentCmdletProvider System.Management.Automation.Provider.IPropertyCmdletProvider System.Management.Automation.Provider.ISecurityDescriptorCmdletProvider System.Management.Automation.Provider.ICmdletProviderSupportsHelp",
                                                                                                                "TypeInitializer":  "Void .cctor()",
                                                                                                                "IsNested":  false,
                                                                                                                "Attributes":  1048833,
                                                                                                                "IsVisible":  true,
                                                                                                                "IsNotPublic":  false,
                                                                                                                "IsPublic":  true,
                                                                                                                "IsNestedPublic":  false,
                                                                                                                "IsNestedPrivate":  false,
                                                                                                                "IsNestedFamily":  false,
                                                                                                                "IsNestedAssembly":  false,
                                                                                                                "IsNestedFamANDAssem":  false,
                                                                                                                "IsNestedFamORAssem":  false,
                                                                                                                "IsAutoLayout":  true,
                                                                                                                "IsLayoutSequential":  false,
                                                                                                                "IsExplicitLayout":  false,
                                                                                                                "IsClass":  true,
                                                                                                                "IsInterface":  false,
                                                                                                                "IsValueType":  false,
                                                                                                                "IsAbstract":  false,
                                                                                                                "IsSealed":  true,
                                                                                                                "IsSpecialName":  false,
                                                                                                                "IsImport":  false,
                                                                                                                "IsSerializable":  false,
                                                                                                                "IsAnsiClass":  true,
                                                                                                                "IsUnicodeClass":  false,
                                                                                                                "IsAutoClass":  false,
                                                                                                                "IsArray":  false,
                                                                                                                "IsByRef":  false,
                                                                                                                "IsPointer":  false,
                                                                                                                "IsPrimitive":  false,
                                                                                                                "IsCOMObject":  false,
                                                                                                                "HasElementType":  false,
                                                                                                                "IsContextful":  false,
                                                                                                                "IsMarshalByRef":  false,
                                                                                                                "GenericTypeArguments":  "",
                                                                                                                "CustomAttributes":  "[System.Management.Automation.Provider.CmdletProviderAttribute(\"FileSystem\", (System.Management.Automation.Provider.ProviderCapabilities)52)] [System.Management.Automation.OutputTypeAttribute(typeof(System.Security.AccessControl.FileSecurity), ProviderCmdlet = \"Set-Acl\")] [System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.String), typeof(System.Management.Automation.PathInfo) }, ProviderCmdlet = \"Resolve-Path\")] [System.Management.Automation.OutputTypeAttribute(typeof(System.Management.Automation.PathInfo), ProviderCmdlet = \"Push-Location\")] [System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.Byte), typeof(System.String) }, ProviderCmdlet = \"Get-Content\")] [System.Management.Automation.OutputTypeAttribute(typeof(System.IO.FileInfo), ProviderCmdlet = \"Get-Item\")] [System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.IO.FileInfo), typeof(System.IO.DirectoryInfo) }, ProviderCmdlet = \"Get-ChildItem\")] [System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.Security.AccessControl.FileSecurity), typeof(System.Security.AccessControl.DirectorySecurity) }, ProviderCmdlet = \"Get-Acl\")] [System.Management.Automation.OutputTypeAttribute(new Type[4] { typeof(System.Boolean), typeof(System.String), typeof(System.IO.FileInfo), typeof(System.IO.DirectoryInfo) }, ProviderCmdlet = \"Get-Item\")] [System.Management.Automation.OutputTypeAttribute(new Type[5] { typeof(System.Boolean), typeof(System.String), typeof(System.DateTime), typeof(System.IO.FileInfo), typeof(System.IO.DirectoryInfo) }, ProviderCmdlet = \"Get-ItemProperty\")] [System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.String), typeof(System.IO.FileInfo) }, ProviderCmdlet = \"New-Item\")]"
                                                                                                            },
                                                                                       "HelpFile":  "System.Management.Automation.dll-Help.xml",
                                                                                       "Name":  "FileSystem",
                                                                                       "PSSnapIn":  {
                                                                                                        "Name":  "Microsoft.PowerShell.Core",
                                                                                                        "IsDefault":  true,
                                                                                                        "ApplicationBase":  "C:\\Windows\\System32\\WindowsPowerShell\\v1.0",
                                                                                                        "AssemblyName":  "System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, ProcessorArchitecture=MSIL",
                                                                                                        "ModuleName":  "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\System.Management.Automation.dll",
                                                                                                        "PSVersion":  "5.1.26100.6780",
                                                                                                        "Version":  "3.0.0.0",
                                                                                                        "Types":  "types.ps1xml typesv3.ps1xml",
                                                                                                        "Formats":  "Certificate.format.ps1xml DotNetTypes.format.ps1xml FileSystem.format.ps1xml Help.format.ps1xml HelpV3.format.ps1xml PowerShellCore.format.ps1xml PowerShellTrace.format.ps1xml Registry.format.ps1xml",
                                                                                                        "Description":  "This Windows PowerShell snap-in contains cmdlets used to manage components of Windows PowerShell.",
                                                                                                        "Vendor":  "Microsoft Corporation",
                                                                                                        "LogPipelineExecutionDetails":  false
                                                                                                    },
                                                                                       "ModuleName":  "Microsoft.PowerShell.Core",
                                                                                       "Module":  null,
                                                                                       "Description":  "",
                                                                                       "Capabilities":  52,
                                                                                       "Home":  "C:\\Users\\Damjan",
                                                                                       "Drives":  [
                                                                                                      "C"
                                                                                                  ]
                                                                                   },
                                                                    "ReadCount":  1
                                                                }
                            }
                        ]
}
